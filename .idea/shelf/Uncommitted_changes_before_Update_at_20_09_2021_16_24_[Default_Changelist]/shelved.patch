Index: logic/src/PlateDisplay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\n\r\n/**\r\n * Created by Tommaso M. Lopedote on 18/09/2021\r\n * Time: 18:38\r\n * Project: Restourant-java-prjk\r\n */\r\npublic class PlateDisplay extends JLabel implements ListCellRenderer<Plate> {\r\n    public Component getListCellRendererComponent(JList<? extends Plate> list, Plate plate, int index,\r\n                                                  boolean isSelected, boolean cellHasFocus) {\r\n        if (isSelected){\r\n            setBackground(list.getSelectionBackground());\r\n            setForeground(list.getSelectionForeground());\r\n        }else{\r\n            setBackground(list.getBackground());\r\n            setForeground(list.getForeground());\r\n        }\r\n        setText(plate.getName());\r\n        return this;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logic/src/PlateDisplay.java b/logic/src/PlateDisplay.java
--- a/logic/src/PlateDisplay.java	(revision 1605013a07f56aa458e141a136a9390c38793302)
+++ b/logic/src/PlateDisplay.java	(date 1631984775189)
@@ -16,7 +16,8 @@
             setBackground(list.getBackground());
             setForeground(list.getForeground());
         }
-        setText(plate.getName());
+        setFont(new Font("Comic Sans", Font.PLAIN, 20));
+        setText(plate.getName() + " - " + plate.getPrize() + "â‚¬");
         return this;
     }
 }
Index: logic/src/myFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport javax.swing.text.Document;\r\nimport javax.swing.text.NumberFormatter;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.text.DecimalFormat;\r\nimport java.text.NumberFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.logging.Handler;\r\nimport java.util.logging.LogRecord;\r\n\r\n//TODO: SPOSTARE LE CLASSI RELATIVE ALLA GRAFICA IN UNA CARTELLA APPOSITA.\r\n\r\npublic class myFrame extends JFrame{\r\n    final int FRAME_WIDTH = 985;\r\n    protected JPanel startPanel, mainMenuPanel, chefPanel, waiterPanel, cookPanel, cashierPanel;\r\n    protected JButton startButton, chefButton, waiterButton, cookButton, cashierButton, exitButtonStart, exitButtonMenu;\r\n    protected JPanel topPanel, midPanel1, midPanel2, botPanel;\r\n    protected Restaurant restaurant;\r\n\r\n\r\n    public myFrame(){\r\n        exitButtonMenu = new JButton();\r\n        exitButtonMenu.setText(\"BACK\");\r\n        exitButtonMenu.setBounds(860, 700, 100, 30);\r\n\r\n        createStartPanel();\r\n\r\n        createMainMenuPanel();\r\n\r\n        createChefPanel();\r\n        chefPanel.add(exitButtonMenu);\r\n\r\n        setSize(1000, 800);\r\n        setTitle(\"Restaurant\");\r\n        getContentPane().add(startPanel);\r\n        setVisible(true);\r\n        setResizable(false);\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n\r\n        startButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                switchPanel(mainMenuPanel);\r\n            }\r\n        });\r\n        exitButtonStart.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                switchPanel(startPanel);\r\n            }\r\n        });\r\n        chefButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                switchPanel(chefPanel);\r\n            }\r\n        });\r\n        waiterButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //test purpose\r\n//                List<Plate> dishDummy1 = Arrays.asList(new Plate(\"Carbonara\", 2,8.00), new Plate(\"Amatriciana\",2,10.00));\r\n//                List<Plate> dishDummy2 = Arrays.asList((new Plate(\"Firoentina\", 3, 25.00), new Plate(\"Stufato\", 3, 25.00));\r\n//                ArrayList<Plate> array1 = new ArrayList<>();\r\n//                ArrayList<Plate> array2 = new ArrayList<>();\r\n//                array1.addAll(dishDummy1);\r\n//                array2.addAll(dishDummy2);\r\n//                restaurant.addArrayPlates(new ArrayList<Plate>());\r\n//                restaurant.addArrayPlates(array1);\r\n//                restaurant.addArrayPlates(array2);\r\n//                restaurant.addArrayPlates(new ArrayList<Plate>());\r\n                //test\r\n//                Waiter waiter1 = new Waiter();\r\n//                restaurant.addEmployee(waiter1);\r\n            }\r\n        });\r\n        exitButtonMenu.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                switchPanel(mainMenuPanel);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void createStartPanel(){\r\n        restaurant = new Restaurant();\r\n        startPanel = new JPanel(new GridBagLayout());\r\n        startButton = new JButton();\r\n        startButton.setPreferredSize(new Dimension(200, 60));\r\n        startButton.setText(\"START\");\r\n        startPanel.add(startButton);\r\n    }\r\n\r\n    public void createMainMenuPanel() {\r\n        mainMenuPanel = new JPanel(null);\r\n\r\n        chefButton = new JButton();\r\n        chefButton.setBounds(99, 200, 300, 90);\r\n        chefButton.setText(\"CHEF\");\r\n        chefButton.setFont(new Font(\"Comic Sans\", Font.BOLD, 20));\r\n\r\n        waiterButton = new JButton();\r\n        waiterButton.setBounds(599, 200, 300, 90);\r\n        waiterButton.setText(\"WAITER\");\r\n\r\n        cookButton = new JButton();\r\n        cookButton.setBounds(599, 500, 300, 90);\r\n        cookButton.setText(\"COOK\");\r\n\r\n        cashierButton = new JButton();\r\n        cashierButton.setBounds(99, 500, 300, 90);\r\n        cashierButton.setText(\"CASHIER\");\r\n\r\n        exitButtonStart = new JButton();\r\n        exitButtonStart.setText(\"BACK\");\r\n        exitButtonStart.setBounds(860, 700, 100, 30);\r\n\r\n        mainMenuPanel.add(Box.createVerticalGlue());\r\n        mainMenuPanel.add(chefButton);\r\n        mainMenuPanel.add(waiterButton);\r\n        mainMenuPanel.add(cookButton);\r\n        mainMenuPanel.add(cashierButton);\r\n        mainMenuPanel.add(exitButtonStart);\r\n    }\r\n\r\n    public void createChefPanel(){\r\n        Chef chef = new Chef(4);\r\n        restaurant.setChef(chef);\r\n        chef.addNewDish(\"Carbonara\", 2, 10.00);\r\n        chef.addNewDish(\"Torta\", 4, 25.00);\r\n        //editing\r\n        chefPanel = new JPanel();\r\n        chefPanel.setLayout(null);\r\n\r\n        JPanel topPanel = new JPanel();\r\n        //uncomment to see the panel\r\n//        topPanel.setBackground(Color.GREEN);\r\n        chefPanel.add(topPanel);\r\n\r\n        JPanel midPanel1 = new JPanel();\r\n        //uncomment to see the panel\r\n//        midPanel1.setBackground(Color.BLACK);\r\n        chefPanel.add(midPanel1);\r\n\r\n        JPanel midPanel2 = new JPanel();\r\n        //uncomment to see the panel\r\n//        midPanel2.setBackground(Color.RED);\r\n        chefPanel.add(midPanel2);\r\n\r\n        JPanel botPanel = new JPanel();\r\n        //uncomment to see the panel\r\n//        botPanel.setBackground(Color.BLUE);\r\n        chefPanel.add(botPanel);\r\n\r\n        //--------------------------------\r\n        //--------topPanel\r\n        //--------------------------------\r\n        topPanel.setBounds(0, 0, FRAME_WIDTH, 90);\r\n        //panel borders and layout\r\n        topPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 5, 10));\r\n        topPanel.setLayout(new BorderLayout(5, 5));\r\n        //panel components\r\n        JLabel frameTitle = new JLabel(\"Chef Control Panel\");\r\n        frameTitle.setFont(new Font(\"Comic Sans\", Font.BOLD, 20));\r\n        JLabel textFieldLabel = new JLabel(\"Number of tables: \");\r\n        //formatter\r\n        NumberFormat integerFormatter = NumberFormat.getIntegerInstance();\r\n        integerFormatter.setMaximumFractionDigits(0);\r\n        integerFormatter.setParseIntegerOnly(true);\r\n        //Formattedtextfield\r\n        JFormattedTextField textFieldTop = new JFormattedTextField(integerFormatter);\r\n        textFieldTop.setText(\"\");\r\n        textFieldTop.setFocusLostBehavior(JFormattedTextField.COMMIT);\r\n\r\n        textFieldTop.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) throws NumberFormatException {\r\n                //TODO: long numbers throws NumberFormatException\r\n//                try (Integer.parseInt(textFieldTop.getText().replaceAll(\",\", \".\"))){\r\n//                    Integer intInputValue = Integer.parseInt(textFieldTop.getText().replaceAll(\",\", \".\"));\r\n//                    JOptionPane.showMessageDialog(topPanel, textFieldTop.getText().toString());\r\n//                    textFieldTop.setText(\"\");\r\n//                }catch (NumberFormatException ne){\r\n//                    JOptionPane.showMessageDialog(topPanel,\"Number too long\");\r\n//                }\r\n                Integer intInputValue = Integer.parseInt(textFieldTop.getText().replaceAll(\",\", \".\"));\r\n                JOptionPane.showMessageDialog(topPanel, textFieldTop.getText().toString());\r\n            }\r\n        });\r\n\r\n        JButton enterTextButton = new JButton(\"OK\");\r\n        enterTextButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //checks for valid input from textfield\r\n                boolean editValid = textFieldTop.isEditValid();\r\n                if (editValid) {\r\n                    Integer intInputValue = Integer.parseInt(textFieldTop.getText());\r\n                    JOptionPane.showMessageDialog(topPanel, intInputValue);\r\n                }else{\r\n                    JOptionPane.showMessageDialog(topPanel, \"Insert only numerical value\");\r\n                }\r\n            }\r\n        });\r\n\r\n        topPanel.add(frameTitle, BorderLayout.BEFORE_FIRST_LINE);\r\n        topPanel.add(textFieldLabel, BorderLayout.WEST);\r\n        topPanel.add(textFieldTop, BorderLayout.CENTER);\r\n        topPanel.add(enterTextButton, BorderLayout.EAST);\r\n        topPanel.add(new JLabel(\"Add entries here: \"), BorderLayout.SOUTH);\r\n\r\n\r\n        //--------------------------------\r\n        //--------midPanel1---------------\r\n        //--------------------------------\r\n        midPanel1.setBounds(0, 90, FRAME_WIDTH, 65);\r\n        //panel borders and layout\r\n        midPanel1.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5));\r\n        midPanel1.setLayout(new FlowLayout(FlowLayout.LEADING));\r\n\r\n        //panel components\r\n        JTextField nameTextField = new JTextField();\r\n        nameTextField.setColumns(20);\r\n        JFormattedTextField categoryTextField = new JFormattedTextField(integerFormatter);\r\n\r\n        categoryTextField.setColumns(4);\r\n\r\n        NumberFormat floatFormatter = new DecimalFormat(\"##0.##\");\r\n        floatFormatter.setMaximumFractionDigits(2);\r\n        JFormattedTextField priceTextField = new JFormattedTextField(floatFormatter);\r\n        ActionListener menuEntryFilds = new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                    String dishName = nameTextField.getText();\r\n                    Integer category = Integer.parseInt(textFieldTop.getText().replaceAll(\",\", \".\"));\r\n                    Double price = (Double) priceTextField.getValue();\r\n                    chef.addNewDish(dishName,category,price);\r\n            }\r\n        };\r\n        nameTextField.addActionListener(menuEntryFilds);\r\n        categoryTextField.addActionListener(menuEntryFilds);\r\n        priceTextField.addActionListener(menuEntryFilds);\r\n\r\n\r\n        priceTextField.setColumns(6);\r\n        JButton addButton = new JButton(\"ADD\");\r\n        JButton deleteButton = new JButton(\"DELETE\");\r\n        midPanel1.setAlignmentX(JPanel.LEFT_ALIGNMENT);\r\n\r\n        midPanel1.add(new JLabel(\"Dish's name: \"));\r\n        midPanel1.add(nameTextField);\r\n        midPanel1.add(new JLabel(\"Category: \"));\r\n        midPanel1.add(categoryTextField);\r\n        midPanel1.add(new JLabel(\"Price: \"));\r\n        midPanel1.add(priceTextField);\r\n        //buttons and spacers\r\n        midPanel1.add(new Box.Filler(new Dimension(100, 2), new Dimension(400, 2), new Dimension(400, 2)));\r\n        midPanel1.add(addButton);\r\n        midPanel1.add(new Box.Filler(new Dimension(300,2), new Dimension(820,2),new Dimension(820,2)));\r\n        midPanel1.add(deleteButton);\r\n\r\n\r\n        //-----------------------------\r\n        //-------midPanel2\r\n        //-----------------------------\r\n        midPanel2.setBounds(0, 155, FRAME_WIDTH, 300);\r\n        //panel borders and layout\r\n        midPanel2.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));\r\n        midPanel2.setLayout(new BorderLayout(5,5));\r\n\r\n        //panel components\r\n        JLabel readLabel = new JLabel(\"Menu content: \");\r\n        readLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);\r\n\r\n        JTextArea textArea = new JTextArea();\r\n        textArea.setEditable(false);\r\n        textArea.setFont(new Font(\"Comic Sans\", Font.PLAIN, 15));\r\n        textArea.setEditable(false);\r\n        textArea.append(\"hi!\");\r\n\r\n        for(int i = 0; i < restaurant.getMenuArray().size(); i++){\r\n            for(int j = 0; j < restaurant.getMenuArray().get(i).size(); j++);\r\n            textArea.append(restaurant.getMenuArray().get(i).toString());\r\n\r\n        }\r\n\r\n        JScrollPane displayMenu = new JScrollPane(textArea);\r\n        displayMenu.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\r\n        displayMenu.setAlignmentX(JScrollPane.LEFT_ALIGNMENT);\r\n\r\n        midPanel2.add(readLabel, BorderLayout.BEFORE_FIRST_LINE);\r\n        midPanel2.add(displayMenu, BorderLayout.CENTER);\r\n\r\n\r\n        //-----------------------------\r\n        //-------botPanel\r\n        //-----------------------------\r\n        botPanel.setBounds(0, 455, FRAME_WIDTH, 40);\r\n        //panel borders and layout\r\n        botPanel.setBorder(BorderFactory.createEmptyBorder(0,10,10,10));\r\n        botPanel.setLayout(new BorderLayout(5,5));\r\n\r\n        //panel components\r\n        JLabel directoryLabel = new JLabel(\"File menu location: \");\r\n        JTextField directoryTextField = new JTextField();\r\n        JButton updateButton = new JButton(\"UPDATE\");\r\n\r\n        botPanel.add(directoryLabel, BorderLayout.WEST);\r\n        botPanel.add(directoryTextField, BorderLayout.CENTER);\r\n        botPanel.add(updateButton, BorderLayout.EAST);\r\n    }\r\n\r\n\r\n    public void switchPanel(JPanel panelToSwitch){\r\n        getContentPane().removeAll();\r\n        getContentPane().add(panelToSwitch);\r\n        revalidate();\r\n        repaint();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new myFrame();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logic/src/myFrame.java b/logic/src/myFrame.java
--- a/logic/src/myFrame.java	(revision 1605013a07f56aa458e141a136a9390c38793302)
+++ b/logic/src/myFrame.java	(date 1631984662488)
@@ -1,50 +1,40 @@
 import javax.swing.*;
-import javax.swing.text.Document;
-import javax.swing.text.NumberFormatter;
 import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
-import java.text.DecimalFormat;
-import java.text.NumberFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
-import java.util.logging.Handler;
-import java.util.logging.LogRecord;
 
 //TODO: SPOSTARE LE CLASSI RELATIVE ALLA GRAFICA IN UNA CARTELLA APPOSITA.
 
 public class myFrame extends JFrame{
-    final int FRAME_WIDTH = 985;
     protected JPanel startPanel, mainMenuPanel, chefPanel, waiterPanel, cookPanel, cashierPanel;
     protected JButton startButton, chefButton, waiterButton, cookButton, cashierButton, exitButtonStart, exitButtonMenu;
-    protected JPanel topPanel, midPanel1, midPanel2, botPanel;
     protected Restaurant restaurant;
 
 
     public myFrame(){
         exitButtonMenu = new JButton();
-        exitButtonMenu.setText("BACK");
+        exitButtonMenu.setText("EXIT");
         exitButtonMenu.setBounds(860, 700, 100, 30);
 
         createStartPanel();
-
         createMainMenuPanel();
-
         createChefPanel();
+
         chefPanel.add(exitButtonMenu);
-
         setSize(1000, 800);
         setTitle("Restaurant");
         getContentPane().add(startPanel);
         setVisible(true);
         setResizable(false);
         setDefaultCloseOperation(EXIT_ON_CLOSE);
-
         startButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
                 switchPanel(mainMenuPanel);
+//                restaurant = new Restaurant();
             }
         });
         exitButtonStart.addActionListener(new ActionListener() {
@@ -63,19 +53,19 @@
             @Override
             public void actionPerformed(ActionEvent e) {
                 //test purpose
-//                List<Plate> dishDummy1 = Arrays.asList(new Plate("Carbonara", 2,8.00), new Plate("Amatriciana",2,10.00));
-//                List<Plate> dishDummy2 = Arrays.asList((new Plate("Firoentina", 3, 25.00), new Plate("Stufato", 3, 25.00));
-//                ArrayList<Plate> array1 = new ArrayList<>();
-//                ArrayList<Plate> array2 = new ArrayList<>();
-//                array1.addAll(dishDummy1);
-//                array2.addAll(dishDummy2);
-//                restaurant.addArrayPlates(new ArrayList<Plate>());
-//                restaurant.addArrayPlates(array1);
-//                restaurant.addArrayPlates(array2);
-//                restaurant.addArrayPlates(new ArrayList<Plate>());
+                List<Plate> dishDummy1 = Arrays.asList(new Plate("Carbonara", 2,8.00), new Plate("Amatriciana",2,10.00));
+                List<Plate> dishDummy2 = Arrays.asList(new Plate("Firoentina", 3, 25.00), new Plate("Stufato", 3, 25.00));
+                ArrayList<Plate> array1 = new ArrayList<>();
+                ArrayList<Plate> array2 = new ArrayList<>();
+                array1.addAll(dishDummy1);
+                array2.addAll(dishDummy2);
+                restaurant.addArrayPlates(new ArrayList<Plate>());
+                restaurant.addArrayPlates(array1);
+                restaurant.addArrayPlates(array2);
+                restaurant.addArrayPlates(new ArrayList<Plate>());
                 //test
-//                Waiter waiter1 = new Waiter();
-//                restaurant.addEmployee(waiter1);
+                Waiter waiter1 = new Waiter();
+                restaurant.addEmployee(waiter1);
             }
         });
         exitButtonMenu.addActionListener(new ActionListener() {
@@ -88,7 +78,6 @@
     }
 
     public void createStartPanel(){
-        restaurant = new Restaurant();
         startPanel = new JPanel(new GridBagLayout());
         startButton = new JButton();
         startButton.setPreferredSize(new Dimension(200, 60));
@@ -98,29 +87,21 @@
 
     public void createMainMenuPanel() {
         mainMenuPanel = new JPanel(null);
-
         chefButton = new JButton();
         chefButton.setBounds(99, 200, 300, 90);
         chefButton.setText("CHEF");
-        chefButton.setFont(new Font("Comic Sans", Font.BOLD, 20));
-
         waiterButton = new JButton();
         waiterButton.setBounds(599, 200, 300, 90);
         waiterButton.setText("WAITER");
-
         cookButton = new JButton();
         cookButton.setBounds(599, 500, 300, 90);
         cookButton.setText("COOK");
-
         cashierButton = new JButton();
         cashierButton.setBounds(99, 500, 300, 90);
         cashierButton.setText("CASHIER");
-
         exitButtonStart = new JButton();
-        exitButtonStart.setText("BACK");
+        exitButtonStart.setText("EXIT");
         exitButtonStart.setBounds(860, 700, 100, 30);
-
-        mainMenuPanel.add(Box.createVerticalGlue());
         mainMenuPanel.add(chefButton);
         mainMenuPanel.add(waiterButton);
         mainMenuPanel.add(cookButton);
@@ -129,192 +110,9 @@
     }
 
     public void createChefPanel(){
-        Chef chef = new Chef(4);
-        restaurant.setChef(chef);
-        chef.addNewDish("Carbonara", 2, 10.00);
-        chef.addNewDish("Torta", 4, 25.00);
         //editing
-        chefPanel = new JPanel();
-        chefPanel.setLayout(null);
-
-        JPanel topPanel = new JPanel();
-        //uncomment to see the panel
-//        topPanel.setBackground(Color.GREEN);
-        chefPanel.add(topPanel);
-
-        JPanel midPanel1 = new JPanel();
-        //uncomment to see the panel
-//        midPanel1.setBackground(Color.BLACK);
-        chefPanel.add(midPanel1);
-
-        JPanel midPanel2 = new JPanel();
-        //uncomment to see the panel
-//        midPanel2.setBackground(Color.RED);
-        chefPanel.add(midPanel2);
-
-        JPanel botPanel = new JPanel();
-        //uncomment to see the panel
-//        botPanel.setBackground(Color.BLUE);
-        chefPanel.add(botPanel);
-
-        //--------------------------------
-        //--------topPanel
-        //--------------------------------
-        topPanel.setBounds(0, 0, FRAME_WIDTH, 90);
-        //panel borders and layout
-        topPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 5, 10));
-        topPanel.setLayout(new BorderLayout(5, 5));
-        //panel components
-        JLabel frameTitle = new JLabel("Chef Control Panel");
-        frameTitle.setFont(new Font("Comic Sans", Font.BOLD, 20));
-        JLabel textFieldLabel = new JLabel("Number of tables: ");
-        //formatter
-        NumberFormat integerFormatter = NumberFormat.getIntegerInstance();
-        integerFormatter.setMaximumFractionDigits(0);
-        integerFormatter.setParseIntegerOnly(true);
-        //Formattedtextfield
-        JFormattedTextField textFieldTop = new JFormattedTextField(integerFormatter);
-        textFieldTop.setText("");
-        textFieldTop.setFocusLostBehavior(JFormattedTextField.COMMIT);
-
-        textFieldTop.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) throws NumberFormatException {
-                //TODO: long numbers throws NumberFormatException
-//                try (Integer.parseInt(textFieldTop.getText().replaceAll(",", "."))){
-//                    Integer intInputValue = Integer.parseInt(textFieldTop.getText().replaceAll(",", "."));
-//                    JOptionPane.showMessageDialog(topPanel, textFieldTop.getText().toString());
-//                    textFieldTop.setText("");
-//                }catch (NumberFormatException ne){
-//                    JOptionPane.showMessageDialog(topPanel,"Number too long");
-//                }
-                Integer intInputValue = Integer.parseInt(textFieldTop.getText().replaceAll(",", "."));
-                JOptionPane.showMessageDialog(topPanel, textFieldTop.getText().toString());
-            }
-        });
-
-        JButton enterTextButton = new JButton("OK");
-        enterTextButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                //checks for valid input from textfield
-                boolean editValid = textFieldTop.isEditValid();
-                if (editValid) {
-                    Integer intInputValue = Integer.parseInt(textFieldTop.getText());
-                    JOptionPane.showMessageDialog(topPanel, intInputValue);
-                }else{
-                    JOptionPane.showMessageDialog(topPanel, "Insert only numerical value");
-                }
-            }
-        });
-
-        topPanel.add(frameTitle, BorderLayout.BEFORE_FIRST_LINE);
-        topPanel.add(textFieldLabel, BorderLayout.WEST);
-        topPanel.add(textFieldTop, BorderLayout.CENTER);
-        topPanel.add(enterTextButton, BorderLayout.EAST);
-        topPanel.add(new JLabel("Add entries here: "), BorderLayout.SOUTH);
-
-
-        //--------------------------------
-        //--------midPanel1---------------
-        //--------------------------------
-        midPanel1.setBounds(0, 90, FRAME_WIDTH, 65);
-        //panel borders and layout
-        midPanel1.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5));
-        midPanel1.setLayout(new FlowLayout(FlowLayout.LEADING));
-
-        //panel components
-        JTextField nameTextField = new JTextField();
-        nameTextField.setColumns(20);
-        JFormattedTextField categoryTextField = new JFormattedTextField(integerFormatter);
-
-        categoryTextField.setColumns(4);
-
-        NumberFormat floatFormatter = new DecimalFormat("##0.##");
-        floatFormatter.setMaximumFractionDigits(2);
-        JFormattedTextField priceTextField = new JFormattedTextField(floatFormatter);
-        ActionListener menuEntryFilds = new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                    String dishName = nameTextField.getText();
-                    Integer category = Integer.parseInt(textFieldTop.getText().replaceAll(",", "."));
-                    Double price = (Double) priceTextField.getValue();
-                    chef.addNewDish(dishName,category,price);
-            }
-        };
-        nameTextField.addActionListener(menuEntryFilds);
-        categoryTextField.addActionListener(menuEntryFilds);
-        priceTextField.addActionListener(menuEntryFilds);
-
-
-        priceTextField.setColumns(6);
-        JButton addButton = new JButton("ADD");
-        JButton deleteButton = new JButton("DELETE");
-        midPanel1.setAlignmentX(JPanel.LEFT_ALIGNMENT);
-
-        midPanel1.add(new JLabel("Dish's name: "));
-        midPanel1.add(nameTextField);
-        midPanel1.add(new JLabel("Category: "));
-        midPanel1.add(categoryTextField);
-        midPanel1.add(new JLabel("Price: "));
-        midPanel1.add(priceTextField);
-        //buttons and spacers
-        midPanel1.add(new Box.Filler(new Dimension(100, 2), new Dimension(400, 2), new Dimension(400, 2)));
-        midPanel1.add(addButton);
-        midPanel1.add(new Box.Filler(new Dimension(300,2), new Dimension(820,2),new Dimension(820,2)));
-        midPanel1.add(deleteButton);
-
-
-        //-----------------------------
-        //-------midPanel2
-        //-----------------------------
-        midPanel2.setBounds(0, 155, FRAME_WIDTH, 300);
-        //panel borders and layout
-        midPanel2.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
-        midPanel2.setLayout(new BorderLayout(5,5));
-
-        //panel components
-        JLabel readLabel = new JLabel("Menu content: ");
-        readLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);
-
-        JTextArea textArea = new JTextArea();
-        textArea.setEditable(false);
-        textArea.setFont(new Font("Comic Sans", Font.PLAIN, 15));
-        textArea.setEditable(false);
-        textArea.append("hi!");
-
-        for(int i = 0; i < restaurant.getMenuArray().size(); i++){
-            for(int j = 0; j < restaurant.getMenuArray().get(i).size(); j++);
-            textArea.append(restaurant.getMenuArray().get(i).toString());
-
-        }
-
-        JScrollPane displayMenu = new JScrollPane(textArea);
-        displayMenu.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
-        displayMenu.setAlignmentX(JScrollPane.LEFT_ALIGNMENT);
-
-        midPanel2.add(readLabel, BorderLayout.BEFORE_FIRST_LINE);
-        midPanel2.add(displayMenu, BorderLayout.CENTER);
-
-
-        //-----------------------------
-        //-------botPanel
-        //-----------------------------
-        botPanel.setBounds(0, 455, FRAME_WIDTH, 40);
-        //panel borders and layout
-        botPanel.setBorder(BorderFactory.createEmptyBorder(0,10,10,10));
-        botPanel.setLayout(new BorderLayout(5,5));
-
-        //panel components
-        JLabel directoryLabel = new JLabel("File menu location: ");
-        JTextField directoryTextField = new JTextField();
-        JButton updateButton = new JButton("UPDATE");
-
-        botPanel.add(directoryLabel, BorderLayout.WEST);
-        botPanel.add(directoryTextField, BorderLayout.CENTER);
-        botPanel.add(updateButton, BorderLayout.EAST);
+        new ChefPanel();
     }
-
 
     public void switchPanel(JPanel panelToSwitch){
         getContentPane().removeAll();
Index: logic/src/ChefPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport javax.swing.border.Border;\r\nimport javax.swing.text.NumberFormatter;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.text.DecimalFormat;\r\nimport java.text.NumberFormat;\r\nimport java.text.ParseException;\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * Created by Tommaso M. Lopedote on 12/09/2021\r\n * Time: 10:30\r\n * Project: Restourant-java-prjk\r\n */\r\npublic class ChefPanel extends myFrame {\r\n    final int FRAME_WIDTH = 985;\r\n    private Restaurant restaurant;\r\n    private JPanel topPanel, midPanel1, midPanel2, botPanel;\r\n\r\n    public void createChefPanel() {\r\n        chefPanel = new JPanel();\r\n        chefPanel.setLayout(null);\r\n\r\n        topPanel = new JPanel();\r\n        chefPanel.add(topPanel);\r\n        applyTopPanelContent();\r\n\r\n        midPanel1 = new JPanel();\r\n        chefPanel.add(midPanel1);\r\n        applyMidPanel1Content();\r\n\r\n        midPanel2 = new JPanel();\r\n        chefPanel.add(midPanel2);\r\n        applyMidPanel2Content();\r\n\r\n        botPanel = new JPanel();\r\n        chefPanel.add(botPanel);\r\n        applyBotPanelContent();\r\n\r\n    }\r\n\r\n    public void applyTopPanelContent() {\r\n        topPanel.setBounds(0, 0, FRAME_WIDTH, 90);\r\n        //uncomment to see the panel\r\n        topPanel.setBackground(Color.GREEN);\r\n        //panel borders and layout\r\n        topPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 5, 10));\r\n        topPanel.setLayout(new BorderLayout(5, 5));\r\n        //panel components\r\n        JLabel frameTitle = new JLabel(\"Chef Control Panel\");\r\n        frameTitle.setFont(new Font(\"Comic Sans\", Font.BOLD, 20));\r\n        JLabel textFieldLabel = new JLabel(\"Number of tables: \");\r\n\r\n        NumberFormat integerFormatter = NumberFormat.getIntegerInstance();\r\n        integerFormatter.setMaximumFractionDigits(0);\r\n        JFormattedTextField textFieldTop = new JFormattedTextField(integerFormatter);\r\n        textFieldTop.setText(\"\");   // when one clicks on ok or just presses enter the text turns back to blank\r\n        textFieldTop.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                Integer intInputValue = Integer.parseInt(textFieldTop.getText().replaceAll(\",\", \"\"));\r\n\r\n                JOptionPane.showMessageDialog(topPanel, textFieldTop.getText().toString());\r\n            }\r\n        });\r\n\r\n        JButton enterTextButton = new JButton(\"OK\");\r\n        enterTextButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n//                JOptionPane.showMessageDialog(topPanel, textFieldTop.getText().toString());\r\n                \r\n            }\r\n        });\r\n\r\n        topPanel.add(frameTitle, BorderLayout.BEFORE_FIRST_LINE);\r\n        topPanel.add(textFieldLabel, BorderLayout.WEST);\r\n        topPanel.add(textFieldTop, BorderLayout.CENTER);\r\n        topPanel.add(enterTextButton, BorderLayout.EAST);\r\n\r\n        topPanel.add(new JLabel(\"Add entries here: \"), BorderLayout.SOUTH);\r\n    }\r\n\r\n    public void applyMidPanel1Content() {\r\n        midPanel1.setBounds(0, 90, FRAME_WIDTH, 65);\r\n        //uncomment to see the panel\r\n        midPanel1.setBackground(Color.BLACK);\r\n        //panel borders and layout\r\n        midPanel1.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5));\r\n        midPanel1.setLayout(new FlowLayout(FlowLayout.LEADING));\r\n\r\n        //panel components\r\n        JTextField nameTextField = new JTextField();\r\n        nameTextField.setColumns(20);\r\n        JFormattedTextField categoryTextField = new JFormattedTextField(); //onlyFewNumbersTextField\r\n        categoryTextField.setColumns(4);\r\n        JFormattedTextField priceTextField = new JFormattedTextField(new NumberFormatter());\r\n        priceTextField.setColumns(6);\r\n        JButton addButton = new JButton(\"ADD\");\r\n        JButton deleteButton = new JButton(\"DELETE\");\r\n        midPanel1.setAlignmentX(JPanel.LEFT_ALIGNMENT);\r\n\r\n        midPanel1.add(new JLabel(\"Dish's name: \"));\r\n        midPanel1.add(nameTextField);\r\n        midPanel1.add(new JLabel(\"Category: \"));\r\n        midPanel1.add(categoryTextField);\r\n        midPanel1.add(new JLabel(\"Price: \"));\r\n        midPanel1.add(priceTextField);\r\n        //buttons and spacers\r\n        midPanel1.add(new Box.Filler(new Dimension(100, 2), new Dimension(400, 2), new Dimension(400, 2)));\r\n        midPanel1.add(addButton);\r\n        midPanel1.add(new Box.Filler(new Dimension(300,2), new Dimension(820,2),new Dimension(820,2)));\r\n        midPanel1.add(deleteButton);\r\n    }\r\n\r\n    public void applyMidPanel2Content() {\r\n        midPanel2.setBounds(0, 155, FRAME_WIDTH, 300);\r\n        //uncomment to see the panel\r\n        midPanel2.setBackground(Color.RED);\r\n        //panel borders and layout\r\n        midPanel2.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));\r\n        midPanel2.setLayout(new BorderLayout(5,5));\r\n\r\n        //panel components\r\n        JLabel readLabel = new JLabel(\"Menu content: \");\r\n        readLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);\r\n\r\n        JTextArea textArea = new JTextArea();\r\n        textArea.setEditable(false);\r\n        textArea.setFont(new Font(\"Comic Sans\", Font.PLAIN, 15));\r\n        textArea.setEditable(false);\r\n        for(int i = 0; i < restaurant.getMenuArray().size(); i++){\r\n            for(int j = 0; j < restaurant.getMenuArray().get(i).size(); j++);\r\n            textArea.append(restaurant.getMenuArray().get(i).toString());\r\n        }\r\n\r\n        JScrollPane displayMenu = new JScrollPane(textArea);\r\n        displayMenu.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\r\n        displayMenu.setAlignmentX(JScrollPane.LEFT_ALIGNMENT);\r\n\r\n        midPanel2.add(readLabel, BorderLayout.BEFORE_FIRST_LINE);\r\n        midPanel2.add(displayMenu, BorderLayout.CENTER);\r\n    }\r\n\r\n    public void applyBotPanelContent() {\r\n        botPanel.setBounds(0, 455, FRAME_WIDTH, 40);\r\n        //uncomment to see the panel\r\n        botPanel.setBackground(Color.BLUE);\r\n        //panel borders and layout\r\n        botPanel.setBorder(BorderFactory.createEmptyBorder(0,10,10,10));\r\n        botPanel.setLayout(new BorderLayout(5,5));\r\n\r\n        //panel components\r\n        JLabel directoryLabel = new JLabel(\"File menu location: \");\r\n        JTextField directoryTextField = new JTextField();\r\n        JButton updateButton = new JButton(\"UPDATE\");\r\n\r\n        botPanel.add(directoryLabel, BorderLayout.WEST);\r\n        botPanel.add(directoryTextField, BorderLayout.CENTER);\r\n        botPanel.add(updateButton, BorderLayout.EAST);\r\n    }\r\n}\r\n// DISPLAY THE ARRAY\r\n// https://stackoverflow.com/questions/30222157/displaying-arrayliststring-in-jtextarea\r\n//    JButton btnNewButton_1 = new JButton(\"Coordinate Anomalies\");\r\n//    btnNewButton_1.addActionListener(new ActionListener() {\r\n//            public void actionPerformed(ActionEvent arg0) {\r\n//                ArrayList<String> anomalies = vessels.coordinateAnomaly();\r\n//                JTextArea textArea = new JTextArea();\r\n//                textArea.setText(anomalies);\r\n//                textArea.setBounds(10, 79, 172, 339);\r\n//                frame.getContentPane().add(textArea);\r\n//            }\r\n//        });\r\n//}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logic/src/ChefPanel.java b/logic/src/ChefPanel.java
--- a/logic/src/ChefPanel.java	(revision 1605013a07f56aa458e141a136a9390c38793302)
+++ b/logic/src/ChefPanel.java	(date 1631984482207)
@@ -1,13 +1,8 @@
 import javax.swing.*;
 import javax.swing.border.Border;
-import javax.swing.text.NumberFormatter;
 import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
-import java.text.DecimalFormat;
-import java.text.NumberFormat;
-import java.text.ParseException;
-import java.util.ArrayList;
 
 /**
  * Created by Tommaso M. Lopedote on 12/09/2021
@@ -17,7 +12,8 @@
 public class ChefPanel extends myFrame {
     final int FRAME_WIDTH = 985;
     private Restaurant restaurant;
-    private JPanel topPanel, midPanel1, midPanel2, botPanel;
+    private JPanel topPanel, midPanel, botPanel;
+    private JPanel overMidPanel;
 
     public void createChefPanel() {
         chefPanel = new JPanel();
@@ -27,13 +23,13 @@
         chefPanel.add(topPanel);
         applyTopPanelContent();
 
-        midPanel1 = new JPanel();
-        chefPanel.add(midPanel1);
-        applyMidPanel1Content();
+        midPanel = new JPanel();
+        chefPanel.add(midPanel);
+        applyMidPanelContent();
 
-        midPanel2 = new JPanel();
-        chefPanel.add(midPanel2);
-        applyMidPanel2Content();
+        overMidPanel = new JPanel();
+        midPanel.add(overMidPanel);
+        applyOverMidPanelContent();
 
         botPanel = new JPanel();
         chefPanel.add(botPanel);
@@ -42,136 +38,73 @@
     }
 
     public void applyTopPanelContent() {
-        topPanel.setBounds(0, 0, FRAME_WIDTH, 90);
+        topPanel.setBounds(0, 0, FRAME_WIDTH, 60);
         //uncomment to see the panel
         topPanel.setBackground(Color.GREEN);
         //panel borders and layout
-        topPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 5, 10));
+        topPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 0, 10));
         topPanel.setLayout(new BorderLayout(5, 5));
         //panel components
         JLabel frameTitle = new JLabel("Chef Control Panel");
-        frameTitle.setFont(new Font("Comic Sans", Font.BOLD, 20));
-        JLabel textFieldLabel = new JLabel("Number of tables: ");
-
-        NumberFormat integerFormatter = NumberFormat.getIntegerInstance();
-        integerFormatter.setMaximumFractionDigits(0);
-        JFormattedTextField textFieldTop = new JFormattedTextField(integerFormatter);
-        textFieldTop.setText("");   // when one clicks on ok or just presses enter the text turns back to blank
-        textFieldTop.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                Integer intInputValue = Integer.parseInt(textFieldTop.getText().replaceAll(",", ""));
-
-                JOptionPane.showMessageDialog(topPanel, textFieldTop.getText().toString());
-            }
-        });
-
+        JLabel textFieldLabel = new JLabel("Table Number: ");
+        JTextField textFieldTop = new JTextField(4);
         JButton enterTextButton = new JButton("OK");
-        enterTextButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-//                JOptionPane.showMessageDialog(topPanel, textFieldTop.getText().toString());
-                
-            }
-        });
-
         topPanel.add(frameTitle, BorderLayout.BEFORE_FIRST_LINE);
         topPanel.add(textFieldLabel, BorderLayout.WEST);
         topPanel.add(textFieldTop, BorderLayout.CENTER);
         topPanel.add(enterTextButton, BorderLayout.EAST);
-
-        topPanel.add(new JLabel("Add entries here: "), BorderLayout.SOUTH);
     }
 
-    public void applyMidPanel1Content() {
-        midPanel1.setBounds(0, 90, FRAME_WIDTH, 65);
-        //uncomment to see the panel
-        midPanel1.setBackground(Color.BLACK);
-        //panel borders and layout
-        midPanel1.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5));
-        midPanel1.setLayout(new FlowLayout(FlowLayout.LEADING));
-
-        //panel components
-        JTextField nameTextField = new JTextField();
-        nameTextField.setColumns(20);
-        JFormattedTextField categoryTextField = new JFormattedTextField(); //onlyFewNumbersTextField
-        categoryTextField.setColumns(4);
-        JFormattedTextField priceTextField = new JFormattedTextField(new NumberFormatter());
-        priceTextField.setColumns(6);
-        JButton addButton = new JButton("ADD");
-        JButton deleteButton = new JButton("DELETE");
-        midPanel1.setAlignmentX(JPanel.LEFT_ALIGNMENT);
-
-        midPanel1.add(new JLabel("Dish's name: "));
-        midPanel1.add(nameTextField);
-        midPanel1.add(new JLabel("Category: "));
-        midPanel1.add(categoryTextField);
-        midPanel1.add(new JLabel("Price: "));
-        midPanel1.add(priceTextField);
-        //buttons and spacers
-        midPanel1.add(new Box.Filler(new Dimension(100, 2), new Dimension(400, 2), new Dimension(400, 2)));
-        midPanel1.add(addButton);
-        midPanel1.add(new Box.Filler(new Dimension(300,2), new Dimension(820,2),new Dimension(820,2)));
-        midPanel1.add(deleteButton);
-    }
-
-    public void applyMidPanel2Content() {
-        midPanel2.setBounds(0, 155, FRAME_WIDTH, 300);
+    public void applyMidPanelContent(){
+        midPanel.setBounds(0, 60, FRAME_WIDTH, 500);
         //uncomment to see the panel
-        midPanel2.setBackground(Color.RED);
+        midPanel.setBackground(Color.RED);
         //panel borders and layout
-        midPanel2.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
-        midPanel2.setLayout(new BorderLayout(5,5));
+        midPanel.setBorder(BorderFactory.createEmptyBorder(5,10,5,10));
+        midPanel.setLayout(new BoxLayout(midPanel, BoxLayout.Y_AXIS));
 
         //panel components
-        JLabel readLabel = new JLabel("Menu content: ");
+        JLabel writeLabel = new JLabel("Write the menu here: ");
+        writeLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);
+
+        JLabel readLabel = new JLabel("Menu entries: ");
         readLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);
 
-        JTextArea textArea = new JTextArea();
-        textArea.setEditable(false);
-        textArea.setFont(new Font("Comic Sans", Font.PLAIN, 15));
-        textArea.setEditable(false);
-        for(int i = 0; i < restaurant.getMenuArray().size(); i++){
-            for(int j = 0; j < restaurant.getMenuArray().get(i).size(); j++);
-            textArea.append(restaurant.getMenuArray().get(i).toString());
-        }
-
-        JScrollPane displayMenu = new JScrollPane(textArea);
-        displayMenu.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
+        JScrollPane displayMenu = new JScrollPane();
         displayMenu.setAlignmentX(JScrollPane.LEFT_ALIGNMENT);
 
-        midPanel2.add(readLabel, BorderLayout.BEFORE_FIRST_LINE);
-        midPanel2.add(displayMenu, BorderLayout.CENTER);
+
+        midPanel.add(writeLabel);
+        midPanel.add(readLabel);
+        midPanel.add(displayMenu);
+
+
+//        public void displayAll() {
+//            JOptionPane.showMessageDialog(null,
+//                    new JScrollPane(new JList(cards.toArray())));
+//        }
+    }
+
+    public void applyOverMidPanelContent(){
+        overMidPanel.setBackground(Color.BLACK);
+        overMidPanel.add(new JTextField());
+        overMidPanel.add(new JLabel("Category: "));
+        overMidPanel.add(new JTextField());
+        overMidPanel.add(new JLabel("Price: "));
+        overMidPanel.add(new JTextField());
+
+        overMidPanel.setBorder(BorderFactory.createEmptyBorder(0,5,0,0));
+        overMidPanel.setLayout(new FlowLayout(FlowLayout.LEADING));
+
+        overMidPanel.setBounds(0,60,100,20);
+        overMidPanel.setBorder(BorderFactory.createEmptyBorder(0,10,0,10));
+        overMidPanel.setVisible(true);
+
     }
 
-    public void applyBotPanelContent() {
-        botPanel.setBounds(0, 455, FRAME_WIDTH, 40);
-        //uncomment to see the panel
+    public void applyBotPanelContent(){
+        botPanel.setBounds(0, 560, FRAME_WIDTH, 130);
         botPanel.setBackground(Color.BLUE);
-        //panel borders and layout
-        botPanel.setBorder(BorderFactory.createEmptyBorder(0,10,10,10));
-        botPanel.setLayout(new BorderLayout(5,5));
 
-        //panel components
-        JLabel directoryLabel = new JLabel("File menu location: ");
-        JTextField directoryTextField = new JTextField();
-        JButton updateButton = new JButton("UPDATE");
-
-        botPanel.add(directoryLabel, BorderLayout.WEST);
-        botPanel.add(directoryTextField, BorderLayout.CENTER);
-        botPanel.add(updateButton, BorderLayout.EAST);
     }
 }
-// DISPLAY THE ARRAY
-// https://stackoverflow.com/questions/30222157/displaying-arrayliststring-in-jtextarea
-//    JButton btnNewButton_1 = new JButton("Coordinate Anomalies");
-//    btnNewButton_1.addActionListener(new ActionListener() {
-//            public void actionPerformed(ActionEvent arg0) {
-//                ArrayList<String> anomalies = vessels.coordinateAnomaly();
-//                JTextArea textArea = new JTextArea();
-//                textArea.setText(anomalies);
-//                textArea.setBounds(10, 79, 172, 339);
-//                frame.getContentPane().add(textArea);
-//            }
-//        });
-//}
Index: logic/src/Waiter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\npublic class Waiter extends Employee{\r\n    private Order<Plate> order;\r\n\r\n    /**\r\n     * Default constructor for Waiter object calls\r\n     * super class constructor by default with no arguments.\r\n     */\r\n    public Waiter() {\r\n        super();\r\n        order = new Order<>();\r\n    }\r\n\r\n    /**\r\n     * Default constructor for Waiter object calls\r\n     * super class constructor by default.\r\n     * @param initialServedTable - the served table.\r\n     */\r\n    public Waiter(Integer initialServedTable){\r\n        super(initialServedTable);\r\n        order = new Order<>();\r\n    }\r\n\r\n    /**\r\n     * Adds the dish to the order list.\r\n     * @param plateName - plate name\r\n     * @param category - category\r\n     * @param restaurant - our restaurant\r\n     */\r\n    protected void addPlate(String plateName, Integer category, Restaurant restaurant){\r\n        ArrayList<ArrayList<Plate>> menu = restaurant.getMenuArray();\r\n        ArrayList<Plate> categoryMenu = menu.get(category-1);\r\n        for (int i = 0; i<categoryMenu.size(); i++){\r\n            Plate currentPlate = categoryMenu.get(i);\r\n            if (currentPlate.getName().toLowerCase().equals(plateName.toLowerCase()))\r\n            {\r\n                order.add(currentPlate);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete the dish to the order list.\r\n     * @param plateName - plate name.\r\n     */\r\n    protected void deletePlate(String plateName){\r\n        for (int i=0; i<order.size(); i++){\r\n            Plate currentPlate = order.get(i);\r\n            if (currentPlate.getName().toLowerCase().equals(plateName.toLowerCase()))\r\n            {\r\n                order.remove(currentPlate);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Submit the order in the order table and cancel the order.\r\n     * @param restaurant - our restaurant\r\n     */\r\n    protected void endOrder(Restaurant restaurant){\r\n        order.setStatusOrder(\"ready\");\r\n        restaurant.addOrderDict(super.getServedTable(), order);\r\n        order = new Order<>();\r\n    }\r\n\r\n    /**\r\n     * Sets a new served table.\r\n     * @param num - served table number\r\n     */\r\n    public void setServedTable(Integer num) {\r\n        super.setServedTable(num);\r\n    }\r\n\r\n    public ArrayList<Plate> getOrder() {\r\n        return order;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logic/src/Waiter.java b/logic/src/Waiter.java
--- a/logic/src/Waiter.java	(revision 1605013a07f56aa458e141a136a9390c38793302)
+++ b/logic/src/Waiter.java	(date 1632147533410)
@@ -29,12 +29,12 @@
      * @param category - category
      * @param restaurant - our restaurant
      */
-    protected void addPlate(String plateName, Integer category, Restaurant restaurant){
+    protected void addPlate(Plate plate, Integer category, Restaurant restaurant){
         ArrayList<ArrayList<Plate>> menu = restaurant.getMenuArray();
         ArrayList<Plate> categoryMenu = menu.get(category-1);
         for (int i = 0; i<categoryMenu.size(); i++){
             Plate currentPlate = categoryMenu.get(i);
-            if (currentPlate.getName().toLowerCase().equals(plateName.toLowerCase()))
+            if (currentPlate.getName() == plate.getName() && currentPlate.getCategory() == plate.getCategory() && currentPlate.getPrize() == plate.getPrize())
             {
                 order.add(currentPlate);
             }
@@ -45,10 +45,10 @@
      * Delete the dish to the order list.
      * @param plateName - plate name.
      */
-    protected void deletePlate(String plateName){
+    protected void deletePlate(Plate  plate){
         for (int i=0; i<order.size(); i++){
             Plate currentPlate = order.get(i);
-            if (currentPlate.getName().toLowerCase().equals(plateName.toLowerCase()))
+            if (currentPlate.getName().equals(plate.getName()))
             {
                 order.remove(currentPlate);
             }
Index: .idea/runConfigurations.xml
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
deleted file mode 100644
--- a/.idea/runConfigurations.xml	(revision 1605013a07f56aa458e141a136a9390c38793302)
+++ /dev/null	(revision 1605013a07f56aa458e141a136a9390c38793302)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2584da16-c1e7-4af8-bcec-c9f2a0c3fd8a\" name=\"Default Changelist\" comment=\"changed responsibility for the setTablesList() method from Restaurant.class to Chef.class. Corrected strange loop behavior.\">\r\n      <change afterPath=\"$PROJECT_DIR$/logic/src/ColorRenderer.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/logic/src/PlateDisplay.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Chef.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Chef.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Restaurant.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Restaurant.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/out/test/Restourant-java-prjk/ChefTest.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/out/test/Restourant-java-prjk/ChefTest.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/src/Chef.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/src/Chef.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/src/Plate.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/src/Plate.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/src/Restaurant.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/src/Restaurant.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/src/myFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/src/myFrame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/test/ChefTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/test/ChefTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/logic/test/RestaurantTester2.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/logic/test/RestaurantTester2.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/logic/src/Restaurant.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/logic/src/Plate.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/logic/src/Chef.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/logic/test/ChefTest.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1vdPo2FplB15wHivhAszTXh8D30\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\r\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"UI_DESIGNER_EDITOR_MODE.PaletteManager.SHOW\" value=\"true\" />\r\n    <property name=\"UI_DESIGNER_EDITOR_MODE.PaletteManager.WIDTH\" value=\"277\" />\r\n    <property name=\"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW\" value=\"true\" />\r\n    <property name=\"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH\" value=\"475\" />\r\n    <property name=\"codeWithMe.voiceChat.enabledByDefault\" value=\"false\" />\r\n    <property name=\"jdk.selected.JAVA_MODULE\" value=\"15\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/javafx-sdk-11.0.2/lib\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"project.propGUI\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\trast\\Desktop\\UniversitÃ \\GitHub\\Restourant-java-prjk\\old\\src\" />\r\n      <recent name=\"C:\\Users\\baran\\OneDrive\\Desktop\\eclipse-workspace\\Restourant-java-prjk\\graphics\\src\" />\r\n      <recent name=\"C:\\Users\\baran\\OneDrive\\Desktop\\eclipse-workspace\\Restourant-java-prjk\\graphics\\src\\sample\" />\r\n      <recent name=\"C:\\Users\\baran\\OneDrive\\Desktop\\eclipse-workspace\\Restourant-java-prjk\\graphics\" />\r\n      <recent name=\"C:\\Users\\trast\\Desktop\\UniversitÃ \\GitHub\\Restourant-java-prjk\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.myFrame\">\r\n    <configuration name=\"ChefPanel\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ChefPanel\" />\r\n      <module name=\"Restourant-java-prjk\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"FormattedSample\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"FormattedSample\" />\r\n      <module name=\"Restourant-java-prjk\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RestaurantTester\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"RestaurantTester\" />\r\n      <module name=\"Restourant-java-prjk\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RestaurantTester2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"RestaurantTester2\" />\r\n      <module name=\"Restourant-java-prjk\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"myFrame\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"myFrame\" />\r\n      <module name=\"Restourant-java-prjk\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.ChefPanel\" />\r\n      <item itemvalue=\"Application.FormattedSample\" />\r\n      <item itemvalue=\"Application.RestaurantTester\" />\r\n      <item itemvalue=\"Application.RestaurantTester2\" />\r\n      <item itemvalue=\"Application.myFrame\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.myFrame\" />\r\n        <item itemvalue=\"Application.RestaurantTester2\" />\r\n        <item itemvalue=\"Application.ChefPanel\" />\r\n        <item itemvalue=\"Application.RestaurantTester\" />\r\n        <item itemvalue=\"Application.FormattedSample\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"modified Cheff's class and added a besic implementation of the Restaurant class\">\r\n      <created>1626887269603</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626887269603</updated>\r\n    </task>\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2584da16-c1e7-4af8-bcec-c9f2a0c3fd8a\" name=\"Default Changelist\" comment=\"modified Cheff's class and added a besic implementation of the Restaurant class\" />\r\n      <created>1626889165263</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1626889165263</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added getter method to Restourant class, corrected a typo in chefs calass\">\r\n      <created>1626963681105</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626963681105</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Added a category argument in the Plate class, added the related JAVADOC.&#10;Corrected the Dictionaries included in the Restourant class, added the related JAVADOC, added 2 new set methods.\">\r\n      <created>1626969903141</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626969903141</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"added varius metods to chef class to add end modify the bufferArray.&#10;added the deleteOrder functionality.&#10;added setters to Plate class.\">\r\n      <created>1626976108623</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626976108623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"corrected errors in indexing arrays in methods of Chef class.&#10;added an incomplete implementation of writeMenu() method of Chef class.&#10;Corrected typo in toSting() of Plate class.\">\r\n      <created>1626980147969</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1626980147969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"addded Read and write menu methods, modified the addNewDish method.&#10;created and tested basic functiuonalities of classes Plates and Chef.\">\r\n      <created>1627154480388</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1627154480388</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"added Read and write menu methods, modified the addNewDish method.&#10;created and tested basic functiuonalities of classes Plates and Chef.\">\r\n      <created>1628607192490</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628607192490</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Adjusted the Chef class methods with simple correction for some functions, more test have been conducted. chefTest.csv debug file added.\">\r\n      <created>1628620082481</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628620082481</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Added the deletePayedOrder Method to the Restaurant.java class. Adjusted some typos in the javadoc\">\r\n      <created>1628694670243</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628694670243</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Adjusted the chef class, added the Restourant tester, added the equals to method to Plate class obj\">\r\n      <created>1628701414689</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628701414689</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Modified the Type of menuArray of Restourant Class,&#10;added a new method to load the menu from the buffer of the cheff class.\">\r\n      <created>1628703492498</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628703492498</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Modified the Type of menuArray of Restourant Class,&#10;added a new method to load the menu from the buffer of the cheff class.\">\r\n      <created>1628703917376</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628703917376</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"simple change line 158 Restourant\">\r\n      <created>1628765066959</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628765066959</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\".\">\r\n      <created>1628765192228</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628765192228</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Added the container class Order with a status attribute to be applied to the object in the moment of creation, the modifier classes of the project must be modified accordingly.\">\r\n      <created>1628847156812</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628847156812</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Modified Order.java to behave like an ArrayList but with a String attribute attached to it\">\r\n      <created>1628850565429</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628850565429</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"added Java.doc\">\r\n      <created>1628851114653</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1628851114653</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\".\">\r\n      <created>1629281072774</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1629281072774</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Ho fatto la scherma iniziale\">\r\n      <created>1629387891231</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1629387891231</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Ho fatto la finestra iniziale\">\r\n      <created>1629453487005</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1629453487005</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Ho creato un file txt con tutti i nomi dei ristoranti creati. Ho creato la finestra con errore se un ristorante giÃ  esiste\">\r\n      <created>1629476378947</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1629476378947</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"removed fxmloader\">\r\n      <created>1631281619100</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631281619100</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"removed fxmloader\">\r\n      <created>1631281624836</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631281624836</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"removed fxmloader\">\r\n      <created>1631281663026</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631281663026</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"basic jSwing module\">\r\n      <created>1631283585815</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631283585815</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"mainMenu added\">\r\n      <created>1631296925939</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631296925939</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"readded old data that went lost wile changing branches\">\r\n      <created>1631343579867</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631343579867</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"deleted redacted files\">\r\n      <created>1631432568873</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631432568873</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"deleted redacted files\">\r\n      <created>1631694370786</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631694370786</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Modificata la classe myFrame relativa alla grafica, aggiunta la classe di gestione del pannello per lo Chef (incompleto).\">\r\n      <created>1631694610233</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631694610233</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"deprecated main in chefpanel\">\r\n      <created>1631694728694</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631694728694</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"rows form 56 to 63, added example for testing purpose.\">\r\n      <created>1631698975081</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631698975081</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"corrected error in test case\">\r\n      <created>1631700354008</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631700354008</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Layout of the Chef panel completed, lacks implementation of action listeners\">\r\n      <created>1631728559121</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631728559121</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"Heavly modified the ChefPanel content, ActionListeners are work-in-progress\">\r\n      <created>1631864013935</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631864013935</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\".\">\r\n      <created>1631893068446</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631893068446</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"changed responsibility for the setTablesList() method from Restaurant.class to Chef.class. Corrected strange loop behavior.\">\r\n      <created>1631896957091</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1631896957091</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"38\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"UnknownFeatures\">\r\n    <option featureType=\"com.intellij.fileTypeFactory\" implementationName=\"*.csv\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"COLUMN_ID_ORDER\">\r\n      <list>\r\n        <option value=\"Default.Root\" />\r\n        <option value=\"Default.Author\" />\r\n        <option value=\"Default.Date\" />\r\n        <option value=\"Default.Subject\" />\r\n        <option value=\"Space.CommitStatus\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Added the deletePayedOrder Method to the Resta\" />\r\n    <MESSAGE value=\"Added the deletePayedOrder Method to the Restaurant.java class. Adjusted some typos in the javadoc\" />\r\n    <MESSAGE value=\"Adjusted the chef class, added the Restourant tester, added the equals to method to Plate class obj\" />\r\n    <MESSAGE value=\"Modified the Type of menuArray of Restourant Class,\" />\r\n    <MESSAGE value=\"Modified the Type of menuArray of Restourant Class,&#10;added a new method to load the menu from the buffer of the cheff class.\" />\r\n    <MESSAGE value=\"simple change line 158 Restourant\" />\r\n    <MESSAGE value=\"Added the container class Order with a status attribute to be applied to the object in the moment of creation, the modifier classes of the project must be modified accordingly.\" />\r\n    <MESSAGE value=\"Modified Order.java to behave like an ArrayList but with a String attribute attached to it\" />\r\n    <MESSAGE value=\"added Java.doc\" />\r\n    <MESSAGE value=\"Ho fatto la scherma iniziale\" />\r\n    <MESSAGE value=\"Ho fatto la finestra iniziale\" />\r\n    <MESSAGE value=\"Ho creato un file txt con tutti i nomi dei ristoranti creati. Ho creato la finestra con errore se un ristorante giÃ  esiste\" />\r\n    <MESSAGE value=\"removed fxmloader\" />\r\n    <MESSAGE value=\"basic jSwing module\" />\r\n    <MESSAGE value=\"mainMenu added\" />\r\n    <MESSAGE value=\"readded old data that went lost wile changing branches\" />\r\n    <MESSAGE value=\"deleted redacted files\" />\r\n    <MESSAGE value=\"Modificata la classe myFrame relativa alla grafica, aggiunta la classe di gestione del pannello per lo Chef (incompleto).\" />\r\n    <MESSAGE value=\"deprecated main in chefpanel\" />\r\n    <MESSAGE value=\"rows form 56 to 63, added example for testing purpose.\" />\r\n    <MESSAGE value=\"corrected error in test case\" />\r\n    <MESSAGE value=\"Layout of the Chef panel completed, lacks implementation of action listeners\" />\r\n    <MESSAGE value=\"Heavly modified the ChefPanel content, ActionListeners are work-in-progress\" />\r\n    <MESSAGE value=\".\" />\r\n    <MESSAGE value=\"changed responsibility for the setTablesList() method from Restaurant.class to Chef.class. Corrected strange loop behavior.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"changed responsibility for the setTablesList() method from Restaurant.class to Chef.class. Corrected strange loop behavior.\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.InputMismatchException\" package=\"java.util\" />\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IndexOutOfBoundsException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"6\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"8\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1605013a07f56aa458e141a136a9390c38793302)
+++ b/.idea/workspace.xml	(date 1632146398502)
@@ -4,19 +4,16 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="2584da16-c1e7-4af8-bcec-c9f2a0c3fd8a" name="Default Changelist" comment="changed responsibility for the setTablesList() method from Restaurant.class to Chef.class. Corrected strange loop behavior.">
-      <change afterPath="$PROJECT_DIR$/logic/src/ColorRenderer.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/logic/src/PlateDisplay.java" afterDir="false" />
+    <list default="true" id="2584da16-c1e7-4af8-bcec-c9f2a0c3fd8a" name="Default Changelist" comment="Nella classe Frame ho creato 3 panelli con alcuni pulsanti usando java SWING">
+      <change afterPath="$PROJECT_DIR$/logic/src/Fram3.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Chef.class" beforeDir="false" afterPath="$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Chef.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Restaurant.class" beforeDir="false" afterPath="$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Restaurant.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logic/out/test/Restourant-java-prjk/ChefTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/logic/out/test/Restourant-java-prjk/ChefTest.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logic/src/Chef.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/src/Chef.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logic/src/Plate.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/src/Plate.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logic/src/Restaurant.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/src/Restaurant.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Restaurant.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/logic/out/production/Restourant-java-prjk/Waiter.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/logic/src/ChefPanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/src/ChefPanel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/logic/src/PlateDisplay.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/src/PlateDisplay.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/logic/src/Waiter.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/src/Waiter.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/logic/src/myFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/src/myFrame.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logic/test/ChefTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/test/ChefTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/logic/test/RestaurantTester2.java" beforeDir="false" afterPath="$PROJECT_DIR$/logic/test/RestaurantTester2.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -44,9 +41,9 @@
     </file-type-list>
   </component>
   <component name="HighlightingSettingsPerFile">
-    <setting file="file://$PROJECT_DIR$/logic/src/Restaurant.java" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/logic/src/Plate.java" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/logic/src/Chef.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/logic/src/Plate.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/logic/src/Restaurant.java" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/logic/test/ChefTest.java" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="ProjectId" id="1vdPo2FplB15wHivhAszTXh8D30" />
@@ -68,8 +65,7 @@
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="UI_DESIGNER_EDITOR_MODE.PaletteManager.SHOW" value="true" />
     <property name="UI_DESIGNER_EDITOR_MODE.PaletteManager.WIDTH" value="277" />
-    <property name="UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW" value="true" />
-    <property name="UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH" value="475" />
+    <property name="UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW" value="false" />
     <property name="codeWithMe.voiceChat.enabledByDefault" value="false" />
     <property name="jdk.selected.JAVA_MODULE" value="15" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$/javafx-sdk-11.0.2/lib" />
@@ -87,7 +83,7 @@
       <recent name="C:\Users\trast\Desktop\UniversitÃ \GitHub\Restourant-java-prjk" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.myFrame">
+  <component name="RunManager" selected="Application.Fram3">
     <configuration name="ChefPanel" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="ChefPanel" />
       <module name="Restourant-java-prjk" />
@@ -95,48 +91,48 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="FormattedSample" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="FormattedSample" />
+    <configuration name="Fram3" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Fram3" />
       <module name="Restourant-java-prjk" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="RestaurantTester" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="RestaurantTester" />
+    <configuration name="Frame" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Frame" />
       <module name="Restourant-java-prjk" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="RestaurantTester2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="RestaurantTester2" />
+    <configuration name="myFrame" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="myFrame" />
       <module name="Restourant-java-prjk" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="myFrame" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="myFrame" />
+    <configuration name="simpleChefPanel" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="simpleChefPanel" />
       <module name="Restourant-java-prjk" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
     <list>
+      <item itemvalue="Application.Frame" />
+      <item itemvalue="Application.simpleChefPanel" />
+      <item itemvalue="Application.myFrame" />
       <item itemvalue="Application.ChefPanel" />
-      <item itemvalue="Application.FormattedSample" />
-      <item itemvalue="Application.RestaurantTester" />
-      <item itemvalue="Application.RestaurantTester2" />
-      <item itemvalue="Application.myFrame" />
+      <item itemvalue="Application.Fram3" />
     </list>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.myFrame" />
-        <item itemvalue="Application.RestaurantTester2" />
+        <item itemvalue="Application.Fram3" />
         <item itemvalue="Application.ChefPanel" />
-        <item itemvalue="Application.RestaurantTester" />
-        <item itemvalue="Application.FormattedSample" />
+        <item itemvalue="Application.simpleChefPanel" />
+        <item itemvalue="Application.myFrame" />
+        <item itemvalue="Application.Frame" />
       </list>
     </recent_temporary>
   </component>
@@ -373,42 +369,7 @@
       <option name="project" value="LOCAL" />
       <updated>1631698975081</updated>
     </task>
-    <task id="LOCAL-00033" summary="corrected error in test case">
-      <created>1631700354008</created>
-      <option name="number" value="00033" />
-      <option name="presentableId" value="LOCAL-00033" />
-      <option name="project" value="LOCAL" />
-      <updated>1631700354008</updated>
-    </task>
-    <task id="LOCAL-00034" summary="Layout of the Chef panel completed, lacks implementation of action listeners">
-      <created>1631728559121</created>
-      <option name="number" value="00034" />
-      <option name="presentableId" value="LOCAL-00034" />
-      <option name="project" value="LOCAL" />
-      <updated>1631728559121</updated>
-    </task>
-    <task id="LOCAL-00035" summary="Heavly modified the ChefPanel content, ActionListeners are work-in-progress">
-      <created>1631864013935</created>
-      <option name="number" value="00035" />
-      <option name="presentableId" value="LOCAL-00035" />
-      <option name="project" value="LOCAL" />
-      <updated>1631864013935</updated>
-    </task>
-    <task id="LOCAL-00036" summary=".">
-      <created>1631893068446</created>
-      <option name="number" value="00036" />
-      <option name="presentableId" value="LOCAL-00036" />
-      <option name="project" value="LOCAL" />
-      <updated>1631893068446</updated>
-    </task>
-    <task id="LOCAL-00037" summary="changed responsibility for the setTablesList() method from Restaurant.class to Chef.class. Corrected strange loop behavior.">
-      <created>1631896957091</created>
-      <option name="number" value="00037" />
-      <option name="presentableId" value="LOCAL-00037" />
-      <option name="project" value="LOCAL" />
-      <updated>1631896957091</updated>
-    </task>
-    <option name="localTasksCounter" value="38" />
+    <option name="localTasksCounter" value="33" />
     <servers />
   </component>
   <component name="UnknownFeatures">
@@ -439,6 +400,10 @@
   </component>
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
+    <MESSAGE value="corrected errors in indexing arrays in methods of Chef class.&#10;added an incomplete implementation of writeMenu() method of Chef class.&#10;Corrected typo in toSting() of Plate class." />
+    <MESSAGE value="addded Read and write menu methods, modified the addNewDish method.&#10;created and tested basic functiuonalities of classes Plates and Chef." />
+    <MESSAGE value="added Read and write menu methods, modified the addNewDish method.&#10;created and tested basic functiuonalities of classes Plates and Chef." />
+    <MESSAGE value="Adjusted the Chef class methods with simple correction for some functions, more test have been conducted. chefTest.csv debug file added." />
     <MESSAGE value="Added the deletePayedOrder Method to the Resta" />
     <MESSAGE value="Added the deletePayedOrder Method to the Restaurant.java class. Adjusted some typos in the javadoc" />
     <MESSAGE value="Adjusted the chef class, added the Restourant tester, added the equals to method to Plate class obj" />
@@ -448,6 +413,7 @@
     <MESSAGE value="Added the container class Order with a status attribute to be applied to the object in the moment of creation, the modifier classes of the project must be modified accordingly." />
     <MESSAGE value="Modified Order.java to behave like an ArrayList but with a String attribute attached to it" />
     <MESSAGE value="added Java.doc" />
+    <MESSAGE value="." />
     <MESSAGE value="Ho fatto la scherma iniziale" />
     <MESSAGE value="Ho fatto la finestra iniziale" />
     <MESSAGE value="Ho creato un file txt con tutti i nomi dei ristoranti creati. Ho creato la finestra con errore se un ristorante giÃ  esiste" />
@@ -459,12 +425,7 @@
     <MESSAGE value="Modificata la classe myFrame relativa alla grafica, aggiunta la classe di gestione del pannello per lo Chef (incompleto)." />
     <MESSAGE value="deprecated main in chefpanel" />
     <MESSAGE value="rows form 56 to 63, added example for testing purpose." />
-    <MESSAGE value="corrected error in test case" />
-    <MESSAGE value="Layout of the Chef panel completed, lacks implementation of action listeners" />
-    <MESSAGE value="Heavly modified the ChefPanel content, ActionListeners are work-in-progress" />
-    <MESSAGE value="." />
-    <MESSAGE value="changed responsibility for the setTablesList() method from Restaurant.class to Chef.class. Corrected strange loop behavior." />
-    <option name="LAST_COMMIT_MESSAGE" value="changed responsibility for the setTablesList() method from Restaurant.class to Chef.class. Corrected strange loop behavior." />
+    <option name="LAST_COMMIT_MESSAGE" value="rows form 56 to 63, added example for testing purpose." />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -476,10 +437,6 @@
         <breakpoint enabled="true" type="java-exception">
           <properties class="java.lang.IndexOutOfBoundsException" package="java.lang" />
           <option name="timeStamp" value="6" />
-        </breakpoint>
-        <breakpoint enabled="true" type="java-exception">
-          <properties class="java.lang.NullPointerException" package="java.lang" />
-          <option name="timeStamp" value="8" />
         </breakpoint>
       </breakpoints>
     </breakpoint-manager>
Index: logic/src/Fram3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logic/src/Fram3.java b/logic/src/Fram3.java
new file mode 100644
--- /dev/null	(date 1632147833621)
+++ b/logic/src/Fram3.java	(date 1632147833621)
@@ -0,0 +1,266 @@
+import javax.swing.*;
+import javax.swing.event.ListSelectionEvent;
+import javax.swing.event.ListSelectionListener;
+import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.awt.event.MouseAdapter;
+import java.awt.event.MouseEvent;
+import java.util.ArrayList;
+import java.util.Formattable;
+
+public class Fram3 extends JFrame{
+    protected JPanel startPanel, mainMenuPanel, chefPanel, waiterPanel, orderPanel, cookPanel, cashierPanel;
+    private JButton startButton, chefButton, waiterButton, cookButton, cashierButton, exitButtonStart, exitButtonMenu, endOrderButton;
+    protected ArrayList<JButton> tables;
+    protected Waiter waiter;
+    protected Restaurant restaurant;
+
+    public Fram3(){
+        exitButtonMenu = new JButton("BACK");
+        exitButtonMenu.setBounds(849, 699, 100, 30);
+        endOrderButton = new JButton("END ORDER");
+        endOrderButton.setPreferredSize(new Dimension(150,30));
+
+        createStartPanel();
+        createMainMenuPanel();
+        createChefPanel();
+        createWaiterPanel();
+
+        chefPanel.add(exitButtonMenu);
+        waiterPanel.add(exitButtonMenu);
+
+        setResizable(false);
+        setSize(1000, 800);
+        setTitle("Restaurant");
+        getContentPane().add(startPanel);
+        setVisible(true);
+        setDefaultCloseOperation(EXIT_ON_CLOSE);
+
+        startButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                switchPanel(mainMenuPanel);
+            }
+        });
+
+        exitButtonStart.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                switchPanel(startPanel);
+            }
+        });
+
+        chefButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                switchPanel(chefPanel);
+            }
+        });
+
+        exitButtonMenu.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                switchPanel(mainMenuPanel);
+            }
+        });
+
+        waiterButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                switchPanel(waiterPanel);
+            }
+        });
+
+        for (int i=0; i < tables.size(); i++){
+            int tableNumber = i+1;
+            tables.get(i).addActionListener(new ActionListener() {
+                @Override
+                public void actionPerformed(ActionEvent e) {
+                    createOrderPanel(tableNumber);
+                    waiter.endOrder(restaurant);
+                    switchPanel(orderPanel);
+                }
+            });
+        }
+
+        endOrderButton.addActionListener(new ActionListener() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                switchPanel(waiterPanel);
+            }
+        });
+
+
+    }
+
+    public void createStartPanel(){
+        startPanel = new JPanel(new GridBagLayout());
+        startButton = new JButton();
+        startButton.setPreferredSize(new Dimension(200, 60));
+        startButton.setText("START");
+        startPanel.add(startButton);
+    }
+
+    public void createMainMenuPanel() {
+        mainMenuPanel = new JPanel(null);
+        chefButton = new JButton();
+        chefButton.setBounds(99, 200, 300, 90);
+        chefButton.setText("CHEF");
+        waiterButton = new JButton();
+        waiterButton.setBounds(599, 200, 300, 90);
+        waiterButton.setText("WAITER");
+        cookButton = new JButton();
+        cookButton.setBounds(599, 500, 300, 90);
+        cookButton.setText("COOK");
+        cashierButton = new JButton();
+        cashierButton.setBounds(99, 500, 300, 90);
+        cashierButton.setText("CASHIER");
+        exitButtonStart = new JButton();
+        exitButtonStart.setText("EXIT");
+        exitButtonStart.setBounds(849, 699, 100, 30);
+        mainMenuPanel.add(chefButton);
+        mainMenuPanel.add(waiterButton);
+        mainMenuPanel.add(cookButton);
+        mainMenuPanel.add(cashierButton);
+        mainMenuPanel.add(exitButtonStart);
+    }
+
+    public void createChefPanel(){
+        chefPanel = new JPanel();
+//        new ChefPanel();
+    }
+
+    public void createWaiterPanel(){
+        waiter = new Waiter();
+        waiterPanel = new JPanel(null);
+        tables = new ArrayList<>();
+        JPanel panel1 = new JPanel();
+        int tablesNumber = 15;  //restaurant.getTablesNumbs
+        panel1.setBounds(0,0, 990, 670);
+        panel1.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
+        int divider;
+        if (tablesNumber<10){
+            divider = 2;
+        }
+        else{
+            divider = 4;
+        }
+        panel1.setLayout(new GridLayout(tablesNumber/divider,tablesNumber-tablesNumber/divider, 10, 10));
+        for (int i=0; i<tablesNumber; i++){
+            String text = "Table " + (i+1);
+            JButton tableButton = new JButton(text);
+            tables.add(tableButton);
+            panel1.add(tableButton);
+        }
+        panel1.setBackground(Color.RED);
+        waiterPanel.add(panel1);
+//        new WaiterPanel();
+    }
+
+    public void switchPanel(JPanel panelToSwitch){
+        getContentPane().removeAll();
+        getContentPane().add(panelToSwitch);
+        revalidate();
+        repaint();
+    }
+
+    public void createOrderPanel(int tableNumber){
+        waiter.setServedTable(tableNumber);
+        int FRAME_WIDTH = 985;
+        orderPanel = new JPanel(null);
+        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
+        JPanel leftPanel = new JPanel();
+        JPanel rightPanel = new JPanel();
+        JPanel botPanel = new JPanel();
+
+        topPanel.setBounds(0,0, FRAME_WIDTH, 70);
+        topPanel.setBorder(BorderFactory.createEmptyBorder(5,10,5,10));
+//        topPanel.setBackground(Color.RED);
+        JLabel namePanel = new JLabel("Select the Dish from the menu: ");
+        namePanel.setFont(new Font("Serif", Font.ITALIC, 40));
+        topPanel.add(namePanel);
+
+        leftPanel.setBounds(0,70, FRAME_WIDTH/2, 600);
+        leftPanel.setBorder(BorderFactory.createEmptyBorder(5,10,5,10));
+//        leftPanel.setBackground(Color.YELLOW);
+        leftPanel.setLayout(new BorderLayout(5,5));
+
+        rightPanel.setBounds(FRAME_WIDTH/2, 70, FRAME_WIDTH/2, 600);
+        rightPanel.setBorder(BorderFactory.createEmptyBorder(5,10,5,10));
+//        rightPanel.setBackground(Color.BLUE);
+        rightPanel.setLayout(new BorderLayout(5,5));
+
+        DefaultListModel<Plate> orderListModel = new DefaultListModel<>();
+        JList<Plate> order = new JList(orderListModel);
+        order.setCellRenderer(new PlateDisplay());
+        JScrollPane rightScrollPane = new JScrollPane(order);
+        rightPanel.add(rightScrollPane, BorderLayout.CENTER);
+        JLabel orderText = new JLabel("You can modify your order here: ");
+        orderText.setFont(new Font("Comic sans", Font.BOLD, 15));
+        rightPanel.add(orderText, BorderLayout.BEFORE_FIRST_LINE);
+
+
+//        Plate plate1 = new Plate("Pizza", 1, 5.56);
+//        Plate plate2 = new Plate("Defe", 2, 8.97);
+//        Plate plate3 = new Plate("sfjfjwos", 1, 8);
+//        ArrayList<Plate> initialMenu = new ArrayList<>();
+//        initialMenu.add(plate1);
+//        initialMenu.add(plate2);
+//        initialMenu.add(plate3);
+        ArrayList<Plate> initialMenu = new ArrayList<>();
+        for(int i=0; i<restaurant.getMenuArray().size(); i++){
+            for (int j=0; j<restaurant.getMenuArray().get(i).size(); j++){
+                initialMenu.add(restaurant.getMenuArray().get(i).get(j));
+            }
+        }
+
+
+        JList<Plate> menu = new JList(initialMenu.toArray());
+        menu.setCellRenderer(new PlateDisplay());
+        JScrollPane leftScrollPane = new JScrollPane(menu);
+        leftPanel.add(leftScrollPane, BorderLayout.CENTER);
+        JLabel menuText = new JLabel("Select from the menu: ");
+        menuText.setFont(new Font("Comic sans", Font.BOLD, 15));
+        leftPanel.add(menuText, BorderLayout.BEFORE_FIRST_LINE);
+
+        menu.addMouseListener(new MouseAdapter() {
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                orderListModel.addElement(menu.getSelectedValue());
+                waiter.addPlate(menu.getSelectedValue(), menu.getSelectedValue().getCategory(), restaurant);
+            }
+        });
+        order.addMouseListener(new MouseAdapter() {
+            @Override
+            public void mouseClicked(MouseEvent e) {
+//                JOptionPane.showConfirmDialog(rightPanel, "Would you like to delete? ", JOptionPane.YES_NO_OPTION);
+                if (JOptionPane.showConfirmDialog(rightPanel,"Would you like to delete? ","DELETE",
+                        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
+                    orderListModel.removeElement(order.getSelectedValue());
+                    waiter.deletePlate(order.getSelectedValue());
+                }
+//                else {
+//                    System.out.println("NO");
+//                }
+
+            }
+        });
+
+        botPanel.setBounds(0, 670, FRAME_WIDTH, 100);
+//        botPanel.setBackground(Color.GREEN);
+        botPanel.add(endOrderButton);
+
+        orderPanel.add(topPanel);
+        orderPanel.add(leftPanel);
+        orderPanel.add(rightPanel);
+        orderPanel.add(botPanel);
+    }
+
+    public static void main(String[] args) {
+        new Fram3();
+    }
+
+
+
+}
